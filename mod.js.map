{"version":3,"file":"mod.js","sources":["../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2021 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n/**\n* Returns the complex conjugate of a single-precision complex floating-point number.\n*\n* @param {Complex64} z - complex number\n* @returns {Complex64} complex conjugate\n*\n* @example\n* import Complex64 from '@stdlib/complex-float32-ctor';\n*\n* var z = new Complex64( 5.0, 3.0 );\n*\n* var v = conj( z );\n* // returns <Complex64>[ 5.0, -3.0 ]\n*/\nfunction conj( z ) {\n\treturn new z.constructor( z.re, -z.im );\n}\n\n\n// EXPORTS //\n\nexport default conj;\n"],"names":["conj","z","constructor","re","im"],"mappings":";;AAkCA,SAASA,EAAMC,GACd,OAAO,IAAIA,EAAEC,YAAaD,EAAEE,IAAKF,EAAEG,GACpC"}